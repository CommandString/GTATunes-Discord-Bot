import { REST, RESTGetAPIApplicationEmojisResult, Routes } from 'discord.js';
import { figletText, gtaTunesLog } from '../Core/logger';
import p from 'picocolors';
import useEnv from '../env';
import { writeFile } from 'fs/promises';
import { resolveProjectFile } from '../Core/functions';

(async () => {
    console.log(p.red(await figletText('GTATunes Bot', { font: 'Speed' })));
    console.log(p.dim('Generating GTATunesEmoji enum...'));

    const env = useEnv();
    const rest = new REST({
        version: '10'
    }).setToken(env.TOKEN);

    const emojis = (
        (await rest.get(
            Routes.applicationEmojis(env.ID)
        )) as RESTGetAPIApplicationEmojisResult
    ).items;

    const enumLines: string[] = [];
    const line = (line: string, tabs: number = 0) =>
        enumLines.push(`${'    '.repeat(tabs)}${line}`);

    line('// This file is auto-generated by the update-emoji-enum tool. //');
    line('// Do not edit this file directly. //');
    line('export enum GTATunesEmoji {');

    for (const { id, name } of emojis) {
        line(`${name.toUpperCase()} = '${id}',`, 1);
    }

    line('}');

    const outputPath = resolveProjectFile('src/Core/GTATunesEmoji.ts');

    gtaTunesLog('INFO', `Saving GTATunesEmoji enum to ${p.blue(outputPath)}`);

    await writeFile(outputPath, enumLines.join('\n') + '\n', {
        encoding: 'utf-8'
    });

    gtaTunesLog('INFO', 'Successfully generated GTATunesEmoji enum file.');
})().catch(e => {
    gtaTunesLog('CRIT', e);
});
